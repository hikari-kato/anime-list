"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/jikan-api.ts":
/*!******************************!*\
  !*** ./src/lib/jikan-api.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAnimeById: () => (/* binding */ getAnimeById),\n/* harmony export */   getAnimeExternalLinks: () => (/* binding */ getAnimeExternalLinks),\n/* harmony export */   getCurrentSeasonAnime: () => (/* binding */ getCurrentSeasonAnime),\n/* harmony export */   sortAnimeByBroadcastDay: () => (/* binding */ sortAnimeByBroadcastDay)\n/* harmony export */ });\nconst JIKAN_API_BASE_URL = 'https://api.jikan.moe/v4';\nasync function getCurrentSeasonAnime() {\n    try {\n        const allAnime = [];\n        let page = 1;\n        let hasNextPage = true;\n        while(hasNextPage && page <= 5){\n            var _data_pagination;\n            const response = await fetch(\"\".concat(JIKAN_API_BASE_URL, \"/seasons/now?page=\").concat(page));\n            if (!response.ok) {\n                break;\n            }\n            const data = await response.json();\n            if (!data || !Array.isArray(data.data)) {\n                break;\n            }\n            allAnime.push(...data.data.filter((anime)=>anime && anime.mal_id && anime.type !== 'OVA'));\n            hasNextPage = ((_data_pagination = data.pagination) === null || _data_pagination === void 0 ? void 0 : _data_pagination.has_next_page) || false;\n            page++;\n        }\n        return removeDuplicateAnime(allAnime);\n    } catch (e) {\n        return [];\n    }\n}\nfunction removeDuplicateAnime(animeList) {\n    const seenTitles = new Set();\n    const uniqueAnime = [];\n    for (const anime of animeList){\n        // 日本語タイトル、英語タイトル、通常タイトルの優先順で確認\n        const title = anime.title_japanese || anime.title || anime.title_english || '';\n        const normalizedTitle = title.toLowerCase().trim();\n        if (!seenTitles.has(normalizedTitle) && normalizedTitle) {\n            seenTitles.add(normalizedTitle);\n            uniqueAnime.push(anime);\n        }\n    }\n    return uniqueAnime;\n}\nasync function getAnimeById(id) {\n    try {\n        const response = await fetch(\"\".concat(JIKAN_API_BASE_URL, \"/anime/\").concat(id), {\n            cache: 'force-cache'\n        });\n        if (!response.ok) {\n            console.error(\"HTTP error fetching anime \".concat(id, \": \").concat(response.status));\n            return null;\n        }\n        const data = await response.json();\n        if (!data || !data.data) {\n            console.error(\"Invalid anime data received for ID \".concat(id));\n            return null;\n        }\n        return data.data;\n    } catch (error) {\n        console.error(\"Error fetching anime with ID \".concat(id, \":\"), error);\n        return null;\n    }\n}\nasync function getAnimeExternalLinks(animeId) {\n    try {\n        const response = await fetch(\"\".concat(JIKAN_API_BASE_URL, \"/anime/\").concat(animeId, \"/external\"), {\n            cache: 'force-cache'\n        });\n        if (!response.ok) {\n            return null;\n        }\n        const data = await response.json();\n        if (!data || !Array.isArray(data.data)) {\n            return null;\n        }\n        // \"Official Site\"を検索\n        const officialSite = data.data.find((link)=>link.name === 'Official Site' || link.name === 'Official Website' || link.name.toLowerCase().includes('official'));\n        return officialSite ? officialSite.url : null;\n    } catch (error) {\n        console.error(\"Error fetching external links for anime \".concat(animeId, \":\"), error);\n        return null;\n    }\n}\nfunction sortAnimeByBroadcastDay(animeList) {\n    const dayOrder = [\n        'monday',\n        'tuesday',\n        'wednesday',\n        'thursday',\n        'friday',\n        'saturday',\n        'sunday'\n    ];\n    return animeList.sort((a, b)=>{\n        var _a_broadcast_day, _a_broadcast, _b_broadcast_day, _b_broadcast, _a_type, _b_type;\n        const dayA = ((_a_broadcast = a.broadcast) === null || _a_broadcast === void 0 ? void 0 : (_a_broadcast_day = _a_broadcast.day) === null || _a_broadcast_day === void 0 ? void 0 : _a_broadcast_day.toLowerCase()) || 'unknown';\n        const dayB = ((_b_broadcast = b.broadcast) === null || _b_broadcast === void 0 ? void 0 : (_b_broadcast_day = _b_broadcast.day) === null || _b_broadcast_day === void 0 ? void 0 : _b_broadcast_day.toLowerCase()) || 'unknown';\n        const indexA = dayOrder.indexOf(dayA);\n        const indexB = dayOrder.indexOf(dayB);\n        if (indexA === -1 && indexB === -1) return 0;\n        if (indexA === -1) return 1;\n        if (indexB === -1) return -1;\n        if (indexA !== indexB) {\n            return indexA - indexB;\n        }\n        const typeA = ((_a_type = a.type) === null || _a_type === void 0 ? void 0 : _a_type.toLowerCase()) === 'tv' ? 0 : 1;\n        const typeB = ((_b_type = b.type) === null || _b_type === void 0 ? void 0 : _b_type.toLowerCase()) === 'tv' ? 0 : 1;\n        return typeA - typeB;\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/jikan-api.ts\n"));

/***/ })

});